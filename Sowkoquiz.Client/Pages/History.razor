@page "/History"
@using Sowkoquiz.Constants
@using Sowkoquiz.Grpc
@using Sowkoquiz.Components
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject SearchService.SearchServiceClient SearchService

@* <div class="flex justify-center mb-6"> *@
@*     <input type="text" @bind="_searchTerm" placeholder="Type to search..." class="w-full max-w-lg p-2 border border-gray-300 rounded-l-md"/> *@
@*     <button @onclick="OnSearch" class="p-2 bg-blue-500 text-white rounded-r-md">Search</button> *@
@* </div> *@

@* <div class="space-y-4"> *@
@*     <Virtualize ItemsProvider="GetHistoryAsync" Context="item" @ref="_virtualizeComponent"> *@
@*         <div class="card bg-white shadow-md rounded-md p-4"> *@
@*             <HistoricalQuiz Id="@item.Id" Status="@item.Status.ToString()" Title="@item.Title" EndTime="@item.EndDate.ToDateTime()"/> *@
@*         </div> *@
@*     </Virtualize> *@
@* </div> *@

<div class="flex flex-col">
    <div class="w-full mx-auto">
        <div class="flex justify-between mb-4">
            <input type="text" @bind="_searchTerm" placeholder="Type to search..." class="form-input border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 rounded-md shadow-sm transition duration-150 ease-in-out w-full max-w-lg p-2"/>
            <button @onclick="OnSearch" class="p-2 bg-blue-500 text-white rounded-r-md">Search</button>
        </div>
        <div class="bg-white shadow border-b border-gray-200 sm:rounded-lg w-full">
            <table class="min-w-full divide-y divide-gray-200 w-full overflow-y-scroll">
                <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-5 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-1/12">
                        ID
                    </th>
                    <th scope="col" class="px-6 py-5 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-7/12">
                        Title
                    </th>
                    <th scope="col" class="px-6 py-5 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-2/12">
                        Status
                    </th>
                    <th scope="col" class="px-6 py-5 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-2/12">
                        End Time
                    </th>
                </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                <Virtualize ItemsProvider="GetHistoryAsync" Context="item">
                    <HistoricalQuiz Id="@item.Id" Status="@item.Status.ToString()" Title="@item.Title" EndTime="@item.EndDate.ToDateTime()"/>
                </Virtualize>
                </tbody>
            </table>
        </div>
    </div>
</div>


@code {
    private int _totalCount = 0;
    private string _searchTerm = string.Empty;
    private Virtualize<GetUserHistoryResponse.Types.HistoricalQuiz> _virtualizeComponent;

    private async ValueTask<ItemsProviderResult<GetUserHistoryResponse.Types.HistoricalQuiz>> GetHistoryAsync(ItemsProviderRequest request)
    {
        var key = await GetKey();

        var numQuizes = Math.Min(request.Count, _totalCount - request.StartIndex);

        var response = await SearchService.GetUserHistoryAsync(new GetUserHistoryRequest
        {
            AccessKey = key,
            SearchTerm = _searchTerm,
            Take = 10,
            Skip = numQuizes
        });

        _totalCount += response.Total;

        return new ItemsProviderResult<GetUserHistoryResponse.Types.HistoricalQuiz>(response.HistoricalQuiz, _totalCount);
    }

    private async Task<string> GetKey()
    {
        var key = await LocalStorage.GetItemAsync<string>(LocalStorageKeys.AccessKey);

        return key;
    }

    private async Task OnSearch()
    {
        _totalCount = 0;
        await _virtualizeComponent.RefreshDataAsync();
    }

}