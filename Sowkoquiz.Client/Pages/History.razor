@page "/history"
@using Microsoft.AspNetCore.WebUtilities
@using Sowkoquiz.Constants
@using Sowkoquiz.Grpc
@using Sowkoquiz.Components
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject SearchService.SearchServiceClient SearchService

<PageTitle>History</PageTitle>

<div class="flex flex-col w-full h-full">
    <div class="w-full h-full mx-auto p-4">
        <div class="flex justify-center mb-4">
            <input type="text" @bind="SearchTerm" placeholder="Type to search..." class="form-input border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 rounded-md shadow-sm transition duration-150 ease-in-out w-full max-w-lg p-2"/>
            <button @onclick="OnSearch" class="p-2 bg-blue-500 text-white rounded-r-md float-left">Search</button>
        </div>
        <div class="bg-white shadow border-b border-gray-200 sm:rounded-lg w-full h-full overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200 overflow-y-auto overflow-x-auto">
                <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-5 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        ID
                    </th>
                    <th scope="col" class="px-6 py-5 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Title
                    </th>
                    <th scope="col" class="px-6 py-5 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Status
                    </th>
                    <th scope="col" class="px-6 py-5 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        End Time
                    </th>
                    <th scope="col" class="px-6 py-5 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Actions
                    </th>
                </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                <Virtualize ItemsProvider="GetHistoryAsync" Context="item" @ref="VirtualizeComponent">
                    <HistoricalQuizRow Id="@item.Id" Status="@item.Status.ToString()" 
                                       Title="@item.Title" EndTime="@item.Date.ToDateTime()" 
                                       OnQuizDeleted="RefreshData"/>
                </Virtualize>
                </tbody>
            </table>
        </div>
    </div>
</div>


@code {

    [SupplyParameterFromQuery(Name = "searchTerm")]
    public string? SearchTerm { get; set; } = string.Empty;

    [Inject] public NavigationManager NavigationManager { get; set; } = null!;

    private int _totalCount = 0;
    private Virtualize<GetUserHistoryResponse.Types.HistoricalQuiz> VirtualizeComponent { get; set; } = default!;


    private async ValueTask<ItemsProviderResult<GetUserHistoryResponse.Types.HistoricalQuiz>> GetHistoryAsync(ItemsProviderRequest request)
    {
        var key = await GetKey();

        var response = await SearchService.GetUserHistoryAsync(new GetUserHistoryRequest
        {
            AccessKey = key,
            SearchTerm = SearchTerm ?? string.Empty,
            Take = request.Count,
            Skip = request.StartIndex
        });


        _totalCount = response.Total;

        return new ItemsProviderResult<GetUserHistoryResponse.Types.HistoricalQuiz>(response.HistoricalQuiz, _totalCount);
    }

    private async Task<string> GetKey()
    {
        var key = await LocalStorage.GetItemAsync<string>(LocalStorageKeys.AccessKey);

        return key;
    }

    private async Task OnSearch()
    {
        _totalCount = 0;
        var query = QueryHelpers.AddQueryString("/history", [new KeyValuePair<string, string?>("searchTerm", SearchTerm)]);
        NavigationManager.NavigateTo(query);
        await VirtualizeComponent.RefreshDataAsync();
    }
    
    private async Task RefreshData()
    {
        await VirtualizeComponent.RefreshDataAsync();
    }

}