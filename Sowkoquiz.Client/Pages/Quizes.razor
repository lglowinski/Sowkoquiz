@page "/quizes"
@using Sowkoquiz.Grpc
@using Sowkoquiz.Components
@inject SearchService.SearchServiceClient SearchService

<PageTitle>Quizzes</PageTitle>

<div class="container mx-auto p-4">
    <div class="flex justify-center mb-6">
        <input type="text" @bind="_searchTerm" placeholder="Type to search..." class="w-full max-w-lg p-2 border border-gray-300 rounded-l-md" />
        <button @onclick="OnSearch" class="p-2 bg-blue-500 text-white rounded-r-md">Search</button>
    </div>

    <div class="quiz-list grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 mt-6">
        <Virtualize ItemsProvider="GetItems" Context="quiz"  @ref="_virtualizeComponent">
            <QuizTile Quiz="@quiz" />
        </Virtualize>
    </div>
</div>

@code {
    private int _totalCount = 0;
    private string _searchTerm = string.Empty;
    private Virtualize<SearchQuizResponse.Types.Quiz> _virtualizeComponent;

    private async ValueTask<ItemsProviderResult<SearchQuizResponse.Types.Quiz>> GetItems(ItemsProviderRequest request)
    {
        var numQuizes = Math.Min(request.Count, _totalCount - request.StartIndex);
        var response = await SearchService.SearchQuizAsync(new SearchQuizRequest
        {
            Take = 3, 
            Skip = numQuizes, 
            SearchTerm = _searchTerm
        });

        _totalCount = response.Total;

        return new ItemsProviderResult<SearchQuizResponse.Types.Quiz>(response.Quiz, _totalCount);
    }

    private async Task OnSearch()
    {
        _totalCount = 0;
        await _virtualizeComponent.RefreshDataAsync();
    }

}