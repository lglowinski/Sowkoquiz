// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sowkoquiz.Infrastructure.Persistance;

#nullable disable

namespace Sowkoquiz.Infrastructure.Migrations
{
    [DbContext(typeof(SowkoquizDbContext))]
    partial class SowkoquizDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Sowkoquiz.Domain.ActiveQuizEntity.ActiveQuiz", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AnsweredQuestionsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DefinitionId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("EndTime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DefinitionId");

                    b.HasIndex("EndTime");

                    b.ToTable("ActiveQuizzes");
                });

            modelBuilder.Entity("Sowkoquiz.Domain.QuestionEntity.Question", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("QuizzDefinitionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuizzDefinitionId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Sowkoquiz.Domain.QuizzDefinitionAggregate.QuizzDefinition", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QuizzSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Description");

                    b.HasIndex("Title");

                    b.ToTable("QuizzDefinitions");
                });

            modelBuilder.Entity("Sowkoquiz.Domain.ActiveQuizEntity.ActiveQuiz", b =>
                {
                    b.HasOne("Sowkoquiz.Domain.QuizzDefinitionAggregate.QuizzDefinition", "Definition")
                        .WithMany()
                        .HasForeignKey("DefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Sowkoquiz.Domain.ActiveQuizEntity.Progress", "Progress", b1 =>
                        {
                            b1.Property<int>("ActiveQuizId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Answered")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Answered");

                            b1.Property<int>("Correct")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Correct");

                            b1.Property<int>("Max")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Max");

                            b1.HasKey("ActiveQuizId");

                            b1.ToTable("ActiveQuizzes");

                            b1.WithOwner()
                                .HasForeignKey("ActiveQuizId");
                        });

                    b.Navigation("Definition");

                    b.Navigation("Progress")
                        .IsRequired();
                });

            modelBuilder.Entity("Sowkoquiz.Domain.QuestionEntity.Question", b =>
                {
                    b.HasOne("Sowkoquiz.Domain.QuizzDefinitionAggregate.QuizzDefinition", null)
                        .WithMany("QuestionPool")
                        .HasForeignKey("QuizzDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsMany("Sowkoquiz.Domain.QuestionEntity.Answer", "Answers", b1 =>
                        {
                            b1.Property<int>("QuestionId")
                                .HasColumnType("INTEGER");

                            b1.Property<char>("Letter")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT")
                                .HasColumnName("Letter");

                            b1.Property<bool>("IsCorrect")
                                .HasColumnType("INTEGER")
                                .HasColumnName("IsCorrect");

                            b1.Property<string>("Text")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("AnswerText");

                            b1.HasKey("QuestionId", "Letter");

                            b1.ToTable("Answer");

                            b1.WithOwner()
                                .HasForeignKey("QuestionId");
                        });

                    b.Navigation("Answers");
                });

            modelBuilder.Entity("Sowkoquiz.Domain.QuizzDefinitionAggregate.QuizzDefinition", b =>
                {
                    b.Navigation("QuestionPool");
                });
#pragma warning restore 612, 618
        }
    }
}
